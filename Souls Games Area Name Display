@name Souls Games Area Name Display
@inputs EGP:wirelink [Area1Ent1 Area1Ent2]:entity
@persist [Area1Pos1 Area1Pos2]:vector [Array2 Array]:array Ent:entity AreaNames:array A Switch
@outputs [Area1Pos1 Area1Pos2]:vector [Array2 Array]:array Ent:entity AreaNames:array A Switch

interval(50)

if(first()){
    
    EGP:egpClear()
    
    Area1Pos1 = Area1Ent1:pos()
    Area1Pos2 = Area1Ent2:pos()
    
    AreaNames[1,string]="Dark Forest"
    
}elseif(changed(players():count())){
    Array2 = players()
    for(I=1,Array2:count()){
        if(Array2[I,entity]==owner()){
            Array2:removeEntity(I)
        }
    }
}

findExcludeEntities(Array2)
findIncludeClass(owner():type())
findExcludeClass("prop_*")
findInBox(Area1Pos1,Area1Pos2)
Array = findToArray()
Ent = Array[1,entity]

if(changed(Ent)&Ent){
    timer("showtext",100)
}

if(clk("showtext")){
    EGP:egpText(1,AreaNames[1,string],vec2((-AreaNames[1,string]:length()*(29.75)/2)+egpScrW(owner())/2,-35+egpScrH(owner())/2))
    EGP:egpFont(1,"Roboto",75)
    
    EGP:egpLine(2,vec2(-750+egpScrW(owner())/2,25+egpScrH(owner())/2),vec2(750+egpScrW(owner())/2,25+egpScrH(owner())/2))
    EGP:egpSize(2,10)
    EGP:egpMaterial(2,"engine/lightsprite")
    A = 0
    Switch = 0
}
if(Switch){
    if(A>0){
        A -= 100/30
    }elseif(A<0){
        A = 0
    }
}else{
    if(A<200){
        A += 100/20
    }elseif(A>=200){
        A = 200
        Switch = 1
    }
}
if(A>0){
    EGP:egpAlpha(1,255*clamp(A/100,0,1))
    EGP:egpAlpha(2,255*clamp(A/100,0,1))
    EGP:egpColor(2,vec(255)*clamp(A*1.5/100,0,1))
}else{
    EGP:egpRemove(1)
    EGP:egpRemove(2)
}
